diff --git a/node_modules/react-native-vlc-media-player/VLCPlayer.js b/node_modules/react-native-vlc-media-player/VLCPlayer.js
index 84f0198..09f0be4 100644
--- a/node_modules/react-native-vlc-media-player/VLCPlayer.js
+++ b/node_modules/react-native-vlc-media-player/VLCPlayer.js
@@ -126,7 +126,7 @@ export default class VLCPlayer extends Component {
 
     let isNetwork = !!(uri && uri.match(/^https?:/));
     const isAsset = !!(
-      uri && uri.match(/^(assets-library|file|content|ms-appx|ms-appdata):/)
+      uri && uri.match(/^(assets-library|ms-appx|ms-appdata):/)
     );
     if (!isAsset) {
       isNetwork = true;
diff --git a/node_modules/react-native-vlc-media-player/android/src/main/java/com/yuanzhou/vlc/vlcplayer/ReactVlcPlayerViewManager.java b/node_modules/react-native-vlc-media-player/android/src/main/java/com/yuanzhou/vlc/vlcplayer/ReactVlcPlayerViewManager.java
index c59fc1d..01dbb1a 100644
--- a/node_modules/react-native-vlc-media-player/android/src/main/java/com/yuanzhou/vlc/vlcplayer/ReactVlcPlayerViewManager.java
+++ b/node_modules/react-native-vlc-media-player/android/src/main/java/com/yuanzhou/vlc/vlcplayer/ReactVlcPlayerViewManager.java
@@ -109,7 +109,8 @@ public class ReactVlcPlayerViewManager extends SimpleViewManager<ReactVlcPlayerV
 
     @ReactProp(name = PROP_SEEK)
     public void setSeek(final ReactVlcPlayerView videoView, final float seek) {
-        videoView.seekTo(Math.round(seek * 1000f));
+        videoView.setPosition(seek);
+        //videoView.seekTo(Math.round(seek * 1000f));
         //videoView.seekTo(seek);
     }
 
diff --git a/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayer.m b/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayer.m
index f84bd7a..910ca3b 100644
--- a/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayer.m
+++ b/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayer.m
@@ -231,7 +231,7 @@ static NSString *const playbackRate = @"rate";
         int remainingTime = [[_player remainingTime] intValue];
         int duration      = [_player.media.length intValue];
 
-        if( currentTime >= 0 && currentTime < duration) {
+        if( currentTime >= 0 ) {
             self.onVideoProgress(@{
                                    @"target": self.reactTag,
                                    @"currentTime": [NSNumber numberWithInt:currentTime],
@@ -255,6 +255,16 @@ static NSString *const playbackRate = @"rate";
         [_player jumpForward:interval];
 }
 
+-(void)setVolume:(int)volume
+{
+    if(_player){
+        VLCAudio *audio = _player.audio;
+        if(volume >= 0){
+            audio.volume = volume;
+        }
+    }
+}
+
 -(void)setSeek:(float)pos
 {
     if([_player isSeekable]){
diff --git a/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayerManager.m b/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayerManager.m
index 7f40f9c..8c5a60d 100644
--- a/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayerManager.m
+++ b/node_modules/react-native-vlc-media-player/ios/RCTVLCPlayer/RCTVLCPlayerManager.m
@@ -33,6 +33,7 @@ RCT_EXPORT_VIEW_PROPERTY(source, NSDictionary);
 RCT_EXPORT_VIEW_PROPERTY(paused, BOOL);
 RCT_EXPORT_VIEW_PROPERTY(seek, float);
 RCT_EXPORT_VIEW_PROPERTY(rate, float);
+RCT_EXPORT_VIEW_PROPERTY(volume, int);
 RCT_EXPORT_VIEW_PROPERTY(resume, BOOL);
 RCT_EXPORT_VIEW_PROPERTY(videoAspectRatio, NSString);
 RCT_EXPORT_VIEW_PROPERTY(snapshotPath, NSString);
